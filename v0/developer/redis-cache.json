{
  "name": "redis-cache",
  "displayName": "Redis on SAP BTP, hyperscaler option",
  "description": "The Redis service on SAP BTP provides a way to directly consume the Redis cache service provided by the Infrastructure providers such as AWS and Azure.",
  "icon": "https://digitalmarketplace-sapcpprd.s3.eu-central-1.amazonaws.com/xXLQLYrsh34SMrdW6tFY9sLzOCywbl08tPqcwt6oYRILElMFhpuXF_iVJBRlXgPH.svg",
  "links": [
    {
      "value": "https://community.sap.com/search/?ct=blog&q=Redis%20on%20SAP%20BTP%2C%20hyperscaler%20option",
      "classification": "SAP Community",
      "type": "Link",
      "text": "SAP Community Blog Posts"
    },
    {
      "value": "https://community.sap.com/search/?ct=qa&q=Redis%20on%20SAP%20BTP%2C%20hyperscaler%20option",
      "classification": "SAP Community",
      "type": "Link",
      "text": "SAP Community Questions and Answers"
    },
    {
      "value": "https://discovery-center.cloud.sap/serviceCatalog/redis-hyperscaler-option",
      "classification": "Discovery Center",
      "type": "Link",
      "text": "SAP Discovery Center - Redis, hyperscaler option"
    },
    {
      "value": "https://help.sap.com/doc/43b304f99a8145809c78f292bfc0bc58/Cloud/en-US/98bf747111574187a7c76f8ced51cfeb.html?from=2019-05-01&sel1=Redis",
      "classification": "Documentation",
      "type": "Link",
      "text": "What's New"
    },
    {
      "value": "https://help.sap.com/doc/796c683493bb4233906acd22d3c68110/Cloud/en-US/FSD_Redis.pdf",
      "classification": "Documentation",
      "type": "PDF",
      "text": "Feature Scope Description"
    },
    {
      "value": "https://help.sap.com/viewer/082005ec29494234a42af221bc963a67/Cloud/en-US/71399a37ccba45c5b41d35f5ba9490dc.html",
      "classification": "Documentation",
      "type": "Link",
      "text": "What is Redis, Hyperscaler Option?"
    },
    {
      "value": "https://help.sap.com/viewer/082005ec29494234a42af221bc963a67/Cloud/en-US/a0a4e36f97694766a574dcb81c6ddf5e.html",
      "classification": "Documentation",
      "type": "Link",
      "text": "Initial Setup"
    },
    {
      "value": "https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/5dd739823b824b539eee47b7860a00be.html",
      "classification": "Support",
      "type": "Link",
      "text": "Support"
    },
    {
      "value": "https://help.sap.com/viewer/ad8f6ea81b714bbb9bf995dd2c2b424e/Cloud/en-US",
      "classification": "Documentation",
      "type": "Link",
      "text": "Documentation"
    },
    {
      "value": "https://help.sap.com/viewer/product/Redis/Cloud/en-US",
      "classification": "Documentation",
      "type": "Link",
      "text": "Help Portal Product Page"
    }
  ],
  "servicePlans": [
    {
      "name": "free",
      "displayName": "Free",
      "category": "SERVICE",
      "description": "Create Redis Cache instances for limited use.",
      "isFree": true,
      "isBeta": false,
      "dataCenters": [
        {
          "region": "ap10",
          "name": "Australia (Sydney)"
        },
        {
          "region": "ap11",
          "name": "Singapore"
        },
        {
          "region": "ap12",
          "name": "South Korea (Seoul)"
        },
        {
          "region": "ap20",
          "name": "Australia (Sydney) Azure"
        },
        {
          "region": "ap21",
          "name": "Singapore"
        },
        {
          "region": "br10",
          "name": "Brazil (Sao Paulo)"
        },
        {
          "region": "ca10",
          "name": "Canada (Montreal)"
        },
        {
          "region": "eu10",
          "name": "Europe (Frankfurt)"
        },
        {
          "region": "eu11",
          "name": "Europe (Frankfurt) EU Access - AWS"
        },
        {
          "region": "eu20",
          "name": "Europe (Netherlands)"
        },
        {
          "region": "jp10",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "jp20",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "us10",
          "name": "US East (VA)"
        },
        {
          "region": "us20",
          "name": "US West (WA)"
        },
        {
          "region": "us21",
          "name": "US East (VA)"
        }
      ],
      "schemas": {
        "service_instance": {
          "create": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-free-create.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the major version is defaulted to 4.0",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ],
                  "default": "4.0"
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ],
                  "default": "noeviction"
                }
              }
            }
          },
          "update": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-free-update.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the existing engine version is not changed.",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ]
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ]
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "premium",
      "displayName": "premium",
      "category": "SERVICE",
      "description": "Create production-ready Redis Cache instances with premium features.",
      "isFree": false,
      "isBeta": false,
      "dataCenters": [
        {
          "region": "ap10",
          "name": "Australia (Sydney)"
        },
        {
          "region": "ap11",
          "name": "Singapore"
        },
        {
          "region": "ap12",
          "name": "South Korea (Seoul)"
        },
        {
          "region": "ap20",
          "name": "Australia (Sydney) Azure"
        },
        {
          "region": "ap21",
          "name": "Singapore"
        },
        {
          "region": "br10",
          "name": "Brazil (Sao Paulo)"
        },
        {
          "region": "ca10",
          "name": "Canada (Montreal)"
        },
        {
          "region": "ch20",
          "name": "cf-ch20"
        },
        {
          "region": "eu10",
          "name": "Europe (Frankfurt)"
        },
        {
          "region": "eu11",
          "name": "Europe (Frankfurt) EU Access - AWS"
        },
        {
          "region": "eu20",
          "name": "Europe (Netherlands)"
        },
        {
          "region": "eu30",
          "name": "Europe (Frankfurt)"
        },
        {
          "region": "in30",
          "name": "India (Mumbai)"
        },
        {
          "region": "jp10",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "jp20",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "us10",
          "name": "US East (VA)"
        },
        {
          "region": "us20",
          "name": "US West (WA)"
        },
        {
          "region": "us21",
          "name": "US East (VA)"
        },
        {
          "region": "us30",
          "name": "US Central (IA)"
        }
      ],
      "schemas": {
        "service_instance": {
          "create": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-premium-create.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "description": "Defines amount of memory (in GB) to be used for the instance. The number of CPU cores is also derived from the value based on the premium plan's semantics",
                  "type": "integer",
                  "enum": [
                    8,
                    16,
                    32,
                    64
                  ],
                  "default": 8
                },
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the major version is defaulted to 4.0",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ],
                  "default": "4.0"
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ],
                  "default": "noeviction"
                },
                "shard_count": {
                  "description": "Indicates the number of shards within the Redis cluster. If not provided, it is defaulted to 1. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 90,
                  "default": 1
                },
                "node_count": {
                  "description": "Indicates the number of nodes per shard within the Redis cluster. If not provided, it is defaulted to 3. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 3,
                  "maximum": 6,
                  "default": 3
                },
                "multi_az": {
                  "description": "Indicates whether the instance is a multi-AZ deployment. If not provided, it is defaulted to true.",
                  "type": "boolean",
                  "default": true
                },
                "maintenance_window": {
                  "description": "Indicates the maintenance window for the Redis cache.",
                  "type": "object",
                  "properties": {
                    "day_of_week": {
                      "description": "Day of the week when Redis cache instance can be patched.",
                      "type": "string",
                      "enum": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ],
                      "default": "Sunday"
                    },
                    "start_hour_utc": {
                      "description": "Start hour after which patching of the Redis cache instance can start.",
                      "type": "integer",
                      "default": 4,
                      "minimum": 0,
                      "maximum": 23
                    },
                    "duration": {
                      "description": "Number of hours required for patching the Redis cache instance.",
                      "type": "integer",
                      "default": 5,
                      "minimum": 5,
                      "maximum": 23
                    }
                  }
                },
                "notify_keyspace_events": {
                  "description": "Indicates the keyspace events for which notifications are enabled. If not provided, notifications are disabled.",
                  "type": "string",
                  "pattern": "^[KEg$lshzxeA]*$",
                  "default": ""
                },
                "cluster_mode": {
                  "description": "Indicates whether the instance is clustered redis deployment. If not provided, it is defaulted to true.",
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "update": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-premium-update.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "description": "Defines amount of memory (in GB) to be used for the instance. The number of CPU cores is also derived from the value based on the premium plan's semantics. Note that memory cannot be downscaled",
                  "type": "integer",
                  "enum": [
                    8,
                    16,
                    32,
                    64
                  ]
                },
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the existing engine version is not changed.",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ]
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ]
                },
                "shard_count": {
                  "description": "Indicates the number of shards within the Redis cluster. If not provided, it is defaulted to 1. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 90
                },
                "node_count": {
                  "description": "Indicates the number of nodes per shard within the Redis cluster. If not provided, it is defaulted to 3. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 3,
                  "maximum": 6
                },
                "multi_az": {
                  "description": "Indicates whether the instance is a multi-AZ deployment. Only non-multi-AZ to multi-AZ is allowed.",
                  "type": "boolean"
                },
                "maintenance_window": {
                  "description": "Indicates the maintenance window for the Redis cache.",
                  "type": "object",
                  "properties": {
                    "day_of_week": {
                      "description": "Day of the week when Redis cache instance can be patched.",
                      "type": "string",
                      "enum": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ],
                      "default": "Sunday"
                    },
                    "start_hour_utc": {
                      "description": "Start hour after which patching of the Redis cache instance can start.",
                      "type": "integer",
                      "default": 4,
                      "minimum": 0,
                      "maximum": 23
                    },
                    "duration": {
                      "description": "Number of hours required for patching the Redis cache instance.",
                      "type": "integer",
                      "default": 5,
                      "minimum": 5,
                      "maximum": 23
                    }
                  }
                },
                "notify_keyspace_events": {
                  "description": "Indicates the keyspace events for which notifications are enabled. If not provided, notifications are disabled.",
                  "type": "string",
                  "pattern": "^[KEg$lshzxeA]*$"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "standard",
      "displayName": "standard",
      "category": "SERVICE",
      "description": "Standard Redis Cache service offering.",
      "isFree": false,
      "isBeta": false,
      "dataCenters": [
        {
          "region": "ap10",
          "name": "Australia (Sydney)"
        },
        {
          "region": "ap11",
          "name": "Singapore"
        },
        {
          "region": "ap12",
          "name": "South Korea (Seoul)"
        },
        {
          "region": "ap20",
          "name": "Australia (Sydney) Azure"
        },
        {
          "region": "ap21",
          "name": "Singapore"
        },
        {
          "region": "br10",
          "name": "Brazil (Sao Paulo)"
        },
        {
          "region": "ca10",
          "name": "Canada (Montreal)"
        },
        {
          "region": "ch20",
          "name": "cf-ch20"
        },
        {
          "region": "eu10",
          "name": "Europe (Frankfurt)"
        },
        {
          "region": "eu11",
          "name": "Europe (Frankfurt) EU Access - AWS"
        },
        {
          "region": "eu20",
          "name": "Europe (Netherlands)"
        },
        {
          "region": "eu30",
          "name": "Europe (Frankfurt)"
        },
        {
          "region": "in30",
          "name": "India (Mumbai)"
        },
        {
          "region": "jp10",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "jp20",
          "name": "Japan (Tokyo)"
        },
        {
          "region": "us10",
          "name": "US East (VA)"
        },
        {
          "region": "us20",
          "name": "US West (WA)"
        },
        {
          "region": "us21",
          "name": "US East (VA)"
        },
        {
          "region": "us30",
          "name": "US Central (IA)"
        }
      ],
      "schemas": {
        "service_instance": {
          "create": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-standard-create.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "description": "Defines amount of memory (in GB) to be used for the instance. The number of CPU cores is also derived from the value based on the standard plan's semantics",
                  "type": "integer",
                  "enum": [
                    2,
                    4
                  ],
                  "default": 2
                },
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the major version is defaulted to 4.0",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ],
                  "default": "4.0"
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ],
                  "default": "noeviction"
                },
                "shard_count": {
                  "description": "Indicates the number of shards within the Redis cluster. If not provided, it is defaulted to 1. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 90,
                  "default": 1
                },
                "node_count": {
                  "description": "Indicates the number of nodes per shard within the Redis cluster. If not provided, it is defaulted to 3. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 3,
                  "maximum": 6,
                  "default": 3
                },
                "multi_az": {
                  "description": "Indicates whether the instance is a multi-AZ deployment. If not provided, it is defaulted to true.",
                  "type": "boolean",
                  "default": true
                },
                "maintenance_window": {
                  "description": "Indicates the maintenance window for the Redis cache.",
                  "type": "object",
                  "properties": {
                    "day_of_week": {
                      "description": "Day of the week when Redis cache instance can be patched.",
                      "type": "string",
                      "enum": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ],
                      "default": "Sunday"
                    },
                    "start_hour_utc": {
                      "description": "Start hour after which patching of the Redis cache instance can start.",
                      "type": "integer",
                      "default": 4,
                      "minimum": 0,
                      "maximum": 23
                    },
                    "duration": {
                      "description": "Number of hours required for patching the Redis cache instance.",
                      "type": "integer",
                      "default": 5,
                      "minimum": 5,
                      "maximum": 23
                    }
                  }
                },
                "notify_keyspace_events": {
                  "description": "Indicates the keyspace events for which notifications are enabled. If not provided, notifications are disabled.",
                  "type": "string",
                  "pattern": "^[KEg$lshzxeA]*$",
                  "default": ""
                },
                "cluster_mode": {
                  "description": "Indicates whether the instance is clustered redis deployment. If not provided, it is defaulted to true.",
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "update": {
            "parameters": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "http://example.com/schemas/redis-standard-update.json",
              "type": "object",
              "_show_form_view": true,
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "description": "Defines amount of memory (in GB) to be used for the instance. The number of CPU cores is also derived from the value based on the standard plan's semantics",
                  "type": "integer",
                  "enum": [
                    2,
                    4
                  ]
                },
                "engine_version": {
                  "description": "The major version number of the cache engine to be used for the clusters. If not provided, the existing engine version is not changed.",
                  "type": "string",
                  "enum": [
                    "4.0",
                    "6.0"
                  ]
                },
                "eviction_policy": {
                  "description": "The eviction policy for keys when maximum memory usage is reached. Default is 'noeviction'",
                  "type": "string",
                  "enum": [
                    "allkeys-lru",
                    "volatile-lru",
                    "allkeys-lfu",
                    "volatile-lfu",
                    "allkeys-random",
                    "volatile-random",
                    "volatile-ttl",
                    "noeviction"
                  ]
                },
                "shard_count": {
                  "description": "Indicates the number of shards within the Redis cluster. If not provided, it is defaulted to 1. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 90
                },
                "node_count": {
                  "description": "Indicates the number of nodes per shard within the Redis cluster. If not provided, it is defaulted to 3. For instances with multiple shards and nodes per shard, the number of storage SKU units deducted from available entitlements is equal to the total nodes count in the cluster.",
                  "type": "integer",
                  "minimum": 3,
                  "maximum": 6
                },
                "multi_az": {
                  "description": "Indicates whether the instance is a multi-AZ deployment. Only non-multi-AZ to multi-AZ is allowed.",
                  "type": "boolean"
                },
                "maintenance_window": {
                  "description": "Indicates the maintenance window for the Redis cache.",
                  "type": "object",
                  "properties": {
                    "day_of_week": {
                      "description": "Day of the week when Redis cache instance can be patched.",
                      "type": "string",
                      "enum": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ],
                      "default": "Sunday"
                    },
                    "start_hour_utc": {
                      "description": "Start hour after which patching of the Redis cache instance can start.",
                      "type": "integer",
                      "default": 4,
                      "minimum": 0,
                      "maximum": 23
                    },
                    "duration": {
                      "description": "Number of hours required for patching the Redis cache instance.",
                      "type": "integer",
                      "default": 5,
                      "minimum": 5,
                      "maximum": 23
                    }
                  }
                },
                "notify_keyspace_events": {
                  "description": "Indicates the keyspace events for which notifications are enabled. If not provided, notifications are disabled.",
                  "type": "string",
                  "pattern": "^[KEg$lshzxeA]*$"
                }
              }
            }
          }
        }
      }
    }
  ],
  "supportComponents": [
    {
      "value": "BC-CP-BSB-REDIS"
    }
  ]
}